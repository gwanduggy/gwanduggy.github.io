{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Joshua\\\\GitHub\\\\pub-001\\\\react-01\\\\src\\\\app\\\\apps\\\\working-memory\\\\WorkingMemory.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst appDef = {\n  id: 'working-memory',\n  label: 'Working Memory',\n  component: WorkingMemory\n};\nexport default appDef;\nconst masterList = ['apple', 'eggs', 'elephant', 'trumpet', 'hammer', 'paper', 'sunflower'];\nfunction WorkingMemory(params) {\n  _s();\n  const [availableWords, setAvailableWords] = useState(new Set(masterList));\n  const [numRemaining, setNumRemaining] = useState(0);\n  const [words, setWords] = useState([]);\n  const [shouldShowWords, setShouldShowWords] = useState(false);\n  function pickNextWord() {\n    const word = pickElement(Array.from(availableWords));\n    availableWords.delete(word);\n    setAvailableWords(availableWords);\n    return word;\n  }\n  function startShowingWords() {\n    setShouldShowWords(false);\n    setNumRemaining(3);\n    setWords([pickNextWord()]);\n  }\n  function showNextWord() {\n    setWords(currentWords => [...currentWords, pickNextWord()]);\n    setNumRemaining(n => n - 1);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      color: \"inherit\",\n      component: \"div\",\n      children: \"Working Memory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), words.length === 0 && numRemaining === 0 ? /*#__PURE__*/_jsxDEV(Button, {\n      onClick: startShowingWords,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this) : numRemaining > 0 ? /*#__PURE__*/_jsxDEV(Button, {\n      onClick: showNextWord,\n      children: \"Show next word\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this) : !shouldShowWords ? /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setShouldShowWords(true),\n      children: \"Show answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      onClick: startShowingWords,\n      children: \"Re-start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this), numRemaining > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: words[words.length - 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }, this), shouldShowWords && words.map(word => /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: word\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 47\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(WorkingMemory, \"5DShp82WVt7tM21PQXiWb9bt9/k=\");\n_c = WorkingMemory;\nfunction pickElement(theArray) {\n  const index = pickIndex(theArray);\n  return theArray[index];\n}\nfunction pickIndex(theArray) {\n  return theArray.length > 0 ? Math.floor(Math.random() * theArray.length) : -1;\n}\nvar _c;\n$RefreshReg$(_c, \"WorkingMemory\");","map":{"version":3,"names":["useState","Button","Typography","jsxDEV","_jsxDEV","appDef","id","label","component","WorkingMemory","masterList","params","_s","availableWords","setAvailableWords","Set","numRemaining","setNumRemaining","words","setWords","shouldShowWords","setShouldShowWords","pickNextWord","word","pickElement","Array","from","delete","startShowingWords","showNextWord","currentWords","n","children","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","map","_c","theArray","index","pickIndex","Math","floor","random","$RefreshReg$"],"sources":["D:/Users/Joshua/GitHub/pub-001/react-01/src/app/apps/working-memory/WorkingMemory.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { AppDef, AppParams } from '../apps';\r\n\r\nconst appDef: AppDef = {\r\n    id: 'working-memory',\r\n    label: 'Working Memory',\r\n    component: WorkingMemory,\r\n}\r\nexport default appDef;\r\n\r\nconst masterList = [\r\n  'apple', 'eggs', 'elephant', 'trumpet', \r\n  'hammer', 'paper', 'sunflower',\r\n];\r\n\r\nfunction WorkingMemory( params: AppParams ) {\r\n  const [ availableWords, setAvailableWords ] = useState<Set<string>>(new Set( masterList ) );\r\n\r\n  const [ numRemaining, setNumRemaining ] = useState<number>(0);\r\n  const [ words, setWords ] = useState<string[]>( [] );\r\n  const [ shouldShowWords, setShouldShowWords ] = useState<boolean>( false );\r\n\r\n  function pickNextWord() {\r\n    const word = pickElement( Array.from(availableWords) );\r\n    availableWords.delete( word );\r\n    setAvailableWords( availableWords );\r\n\r\n    return word;\r\n  }\r\n\r\n  function startShowingWords() {\r\n    setShouldShowWords( false );\r\n    setNumRemaining( 3 );\r\n    setWords( [ pickNextWord() ] );\r\n  }\r\n\r\n  function showNextWord() {\r\n    setWords( currentWords => [ ...currentWords, pickNextWord() ] );\r\n    setNumRemaining( n => n - 1 );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h2\" color=\"inherit\" component=\"div\">\r\n      Working Memory\r\n      </Typography>\r\n      {\r\n        words.length === 0 && numRemaining === 0 ?\r\n          <Button onClick={startShowingWords}>Start</Button>\r\n        : numRemaining > 0 ?\r\n          <Button onClick={showNextWord}>Show next word</Button>\r\n        : !shouldShowWords ?\r\n          <Button onClick={ () => setShouldShowWords(true)}>Show answers</Button>\r\n        : <Button onClick={startShowingWords}>Re-start</Button>\r\n      }\r\n      {\r\n        numRemaining > 0 && <Typography variant=\"h4\">{words[ words.length - 1]}</Typography> \r\n      }\r\n      {\r\n        shouldShowWords && words.map( word => <Typography variant=\"h5\">{word}</Typography> )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction pickElement( theArray: Array<any> ) {\r\n  const index = pickIndex( theArray );\r\n  return theArray[ index ];\r\n}\r\n\r\nfunction pickIndex( theArray: Array<any> ) {\r\n  return theArray.length > 0 ? Math.floor( Math.random() * theArray.length ) : -1\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}