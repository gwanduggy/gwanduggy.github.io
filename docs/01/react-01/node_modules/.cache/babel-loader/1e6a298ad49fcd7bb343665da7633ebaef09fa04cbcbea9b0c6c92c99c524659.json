{"ast":null,"code":"// import * as React from 'react';\nimport React,{useState}from'react';import Button from'@mui/material/Button';import Container from'@mui/material/Container';import Typography from'@mui/material/Typography';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const appDef={id:'working-memory',label:'Working Memory',component:WorkingMemory};export default appDef;const masterList=['apple','eggs','elephant','trumpet','hammer','paper','sunflower','garlic','cheese','podcast','football','television','speaker','coffee','glue','super cali fragile istic expiala doe shehs'];function WorkingMemory(params){/**\r\n   * The available words left for picking\r\n   */const[availableWords,setAvailableWords]=useState(new Set(masterList));/**\r\n   * Number of words left to add to the list.\r\n   */const[numRemaining,setNumRemaining]=useState(0);/**\r\n   * The words to remember\r\n   */const[words,setWords]=useState([]);/**\r\n   * Should show the whole list.\r\n   */const[shouldShowWords,setShouldShowWords]=useState(false);/**\r\n   * Picks the next word to add to the list.\r\n   */const synth=window.speechSynthesis;const utterance=new SpeechSynthesisUtterance();function pickNextWord(){if(availableWords.size>0){const word=pickElement(Array.from(availableWords));availableWords.delete(word);setAvailableWords(availableWords);textToSpeech(word);return word;}}function textToSpeech(helloWorld){utterance.text=helloWorld;synth.speak(utterance);}////////////////////////////////////////////////////////////\n// Callbacks\n//\nfunction startShowingWords(){setNumRemaining(7);setWords([pickNextWord()]);}function showNextWord(){setWords(currentWords=>[...currentWords,pickNextWord()]);setNumRemaining(n=>n-1);}function resetEverything(){setAvailableWords(new Set(masterList));setShouldShowWords(false);setWords([]);}return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h2\",color:\"inherit\",component:\"div\",children:\"Working Memory\"}),words.length===0&&numRemaining===0?/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:startShowingWords,children:\"Start\"}):numRemaining>0?/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:showNextWord,children:\"Next word\"}):!shouldShowWords?/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:()=>setShouldShowWords(true),children:\"Show answers\"}):/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:resetEverything,children:\"Reset\"}),numRemaining>=0&&!shouldShowWords&&/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:words[words.length-1]}),shouldShowWords&&words.map(word=>/*#__PURE__*/_jsx(Typography,{variant:\"h5\",children:word}))]});}// END WorkingMemory\nfunction pickElement(theArray){const index=pickIndex(theArray);return theArray[index];}function pickIndex(theArray){return theArray.length>0?Math.floor(Math.random()*theArray.length):-1;}","map":{"version":3,"names":["React","useState","Button","Container","Typography","jsx","_jsx","jsxs","_jsxs","appDef","id","label","component","WorkingMemory","masterList","params","availableWords","setAvailableWords","Set","numRemaining","setNumRemaining","words","setWords","shouldShowWords","setShouldShowWords","synth","window","speechSynthesis","utterance","SpeechSynthesisUtterance","pickNextWord","size","word","pickElement","Array","from","delete","textToSpeech","helloWorld","text","speak","startShowingWords","showNextWord","currentWords","n","resetEverything","children","variant","color","length","onClick","map","theArray","index","pickIndex","Math","floor","random"],"sources":["D:/Users/Joshua/GitHub/pub-001/react-01/src/app/apps/working-memory/WorkingMemory.tsx"],"sourcesContent":["// import * as React from 'react';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { AppDef, AppParams } from '../apps';\r\n\r\n\r\nconst appDef: AppDef = {\r\n    id: 'working-memory',\r\n    label: 'Working Memory',\r\n    component: WorkingMemory,\r\n}\r\nexport default appDef;\r\n\r\nconst masterList = [\r\n  'apple', 'eggs', 'elephant', 'trumpet', \r\n  'hammer', 'paper', 'sunflower',\r\n  'garlic', 'cheese', 'podcast', 'football',\r\n  'television' , 'speaker' , 'coffee' , 'glue', \r\n  'super cali fragile istic expiala doe shehs' ,\r\n];\r\n\r\nfunction WorkingMemory( params: AppParams ) {\r\n  /**\r\n   * The available words left for picking\r\n   */\r\n  const [ availableWords, setAvailableWords ] = useState<Set<string>>(new Set( masterList ) );\r\n\r\n  /**\r\n   * Number of words left to add to the list.\r\n   */\r\n  const [ numRemaining, setNumRemaining ] = useState<number>(0);\r\n\r\n  /**\r\n   * The words to remember\r\n   */\r\n  const [ words, setWords ] = useState<string[]>( [] );\r\n\r\n  /**\r\n   * Should show the whole list.\r\n   */\r\n  const [ shouldShowWords, setShouldShowWords ] = useState<boolean>( false );\r\n\r\n  /**\r\n   * Picks the next word to add to the list.\r\n   */\r\n\r\n  const synth = window.speechSynthesis;\r\n  const utterance = new SpeechSynthesisUtterance();\r\n\r\n  function pickNextWord() {\r\n    if ( availableWords.size > 0 ) {\r\n      const word = pickElement( Array.from(availableWords) );\r\n      availableWords.delete( word );\r\n      setAvailableWords( availableWords );\r\n      textToSpeech(word);\r\n      return word;\r\n    }\r\n  }\r\n\r\n  function textToSpeech(helloWorld: string) {\r\n    utterance.text = helloWorld;\r\n    synth.speak(utterance);\r\n  }  \r\n\r\n\r\n  ////////////////////////////////////////////////////////////\r\n  // Callbacks\r\n  //\r\n\r\n  function startShowingWords() {\r\n    setNumRemaining( 7 );\r\n    setWords( [ pickNextWord() ] );\r\n  }\r\n\r\n  function showNextWord() {\r\n    setWords( currentWords => [ ...currentWords, pickNextWord() ] );\r\n    setNumRemaining( n => n - 1 );\r\n  }\r\n\r\n  function resetEverything() {\r\n    setAvailableWords( new Set( masterList ) );\r\n    setShouldShowWords( false );\r\n    setWords( [] );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h2\" color=\"inherit\" component=\"div\">\r\n      Working Memory\r\n      </Typography>\r\n      {\r\n        words.length === 0 && numRemaining === 0 ?\r\n          <Button variant='contained' onClick={startShowingWords}>Start</Button>\r\n        : numRemaining > 0 ?\r\n          <Button variant='contained' onClick={showNextWord}>Next word</Button>\r\n        : !shouldShowWords ?\r\n          <Button variant='contained' onClick={ () => setShouldShowWords(true)}>Show answers</Button>\r\n        : <Button variant='contained' onClick={resetEverything}>Reset</Button>\r\n      }\r\n      {\r\n        numRemaining >= 0 && !shouldShowWords && <Typography variant=\"h4\">{words[ words.length - 1]}</Typography> \r\n      }\r\n      {\r\n        shouldShowWords && words.map( word => <Typography variant=\"h5\">{word}</Typography> )\r\n      }\r\n    </Container>\r\n  );\r\n} // END WorkingMemory\r\n\r\nfunction pickElement( theArray: Array<any> ) {\r\n  const index = pickIndex( theArray );\r\n  return theArray[ index ];\r\n}\r\n\r\nfunction pickIndex( theArray: Array<any> ) {\r\n  return theArray.length > 0 ? Math.floor( Math.random() * theArray.length ) : -1\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}