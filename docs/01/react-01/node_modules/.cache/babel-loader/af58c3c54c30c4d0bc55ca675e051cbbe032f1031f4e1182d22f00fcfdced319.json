{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridColumnGroupsLookupSelector } from '../../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { isEventTargetInPortal } from '../../utils/domUtils';\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from '../../utils/cellBorderUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    showLeftBorder,\n    showRightBorder,\n    groupId,\n    pinnedPosition\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', 'withBorderColor', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer', 'withBorderColor'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnGroupHeader(props) {\n  var _columnGroupsLookup$g;\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    hasFocus,\n    tabIndex,\n    isLastColumn,\n    pinnedPosition,\n    style,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId !== null && groupId !== void 0 ? groupId : '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && ((_columnGroupsLookup$g = columnGroupsLookup[groupId]) === null || _columnGroupsLookup$g === void 0 ? void 0 : _columnGroupsLookup$g.renderHeaderGroup);\n  const renderParams = React.useMemo(() => ({\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  }), [groupId, headerName, description, depth, maxDepth, fields, colIndex, isLastColumn]);\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showLeftBorder,\n    showRightBorder,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n  const label = headerName !== null && headerName !== void 0 ? headerName : groupId;\n  const id = useId();\n  const elementId = groupId === null ? \"empty-group-cell-\".concat(id) : groupId;\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (hasFocus) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus === null || elementToFocus === void 0 || elementToFocus.focus();\n    }\n  }, [apiRef, hasFocus]);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, renderParams, event);\n  },\n  // For now this is stupid, because renderParams change all the time.\n  // Need to move it's computation in the api, such that for a given depth+columnField, I can get the group parameters\n  [apiRef, renderParams]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onKeyDown: publish('columnGroupHeaderKeyDown'),\n    onFocus: publish('columnGroupHeaderFocus'),\n    onBlur: publish('columnGroupHeaderBlur')\n  }), [publish]);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: tabIndex,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: false,\n    label: label,\n    \"aria-colspan\": fields.length\n    // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n\n    \"data-fields\": \"|-\".concat(fields.join('-|-'), \"-|\"),\n    style: style\n  }, mouseEventsHandlers));\n}\nexport { GridColumnGroupHeader };","map":{"version":3,"names":["_extends","React","unstable_useId","useId","unstable_composeClasses","composeClasses","getDataGridUtilityClass","useGridRootProps","gridColumnGroupsLookupSelector","useGridApiContext","useGridSelector","GridGenericColumnHeaderItem","isEventTargetInPortal","shouldCellShowLeftBorder","shouldCellShowRightBorder","jsx","_jsx","useUtilityClasses","ownerState","classes","headerAlign","isDragging","showLeftBorder","showRightBorder","groupId","pinnedPosition","slots","root","draggableContainer","titleContainer","titleContainerContent","GridColumnGroupHeader","props","_columnGroupsLookup$g","width","depth","maxDepth","fields","height","colIndex","hasFocus","tabIndex","isLastColumn","style","indexInSection","sectionLength","gridHasFiller","rootProps","headerCellRef","useRef","apiRef","columnGroupsLookup","group","headerName","description","undefined","headerComponent","render","renderHeaderGroup","renderParams","useMemo","showCellVerticalBorder","label","id","elementId","concat","useLayoutEffect","focusableElement","current","querySelector","elementToFocus","focus","publish","useCallback","eventName","event","publishEvent","mouseEventsHandlers","onKeyDown","onFocus","onBlur","headerClassName","ref","columnMenuOpen","isResizing","sortDirection","isDraggable","columnMenuIconButton","columnTitleIconButtons","resizable","length","join"],"sources":["D:/Users/Joshua/GitHub/pub-001/react-01/node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnGroupHeader.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridColumnGroupsLookupSelector } from '../../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { isEventTargetInPortal } from '../../utils/domUtils';\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from '../../utils/cellBorderUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    showLeftBorder,\n    showRightBorder,\n    groupId,\n    pinnedPosition\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', 'withBorderColor', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer', 'withBorderColor'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnGroupHeader(props) {\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    hasFocus,\n    tabIndex,\n    isLastColumn,\n    pinnedPosition,\n    style,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId ?? '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && columnGroupsLookup[groupId]?.renderHeaderGroup;\n  const renderParams = React.useMemo(() => ({\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  }), [groupId, headerName, description, depth, maxDepth, fields, colIndex, isLastColumn]);\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showLeftBorder,\n    showRightBorder,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n  const label = headerName ?? groupId;\n  const id = useId();\n  const elementId = groupId === null ? `empty-group-cell-${id}` : groupId;\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (hasFocus) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n    }\n  }, [apiRef, hasFocus]);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, renderParams, event);\n  },\n  // For now this is stupid, because renderParams change all the time.\n  // Need to move it's computation in the api, such that for a given depth+columnField, I can get the group parameters\n  [apiRef, renderParams]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onKeyDown: publish('columnGroupHeaderKeyDown'),\n    onFocus: publish('columnGroupHeaderFocus'),\n    onBlur: publish('columnGroupHeaderBlur')\n  }), [publish]);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: tabIndex,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: false,\n    label: label,\n    \"aria-colspan\": fields.length\n    // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n    \"data-fields\": `|-${fields.join('-|-')}-|`,\n    style: style\n  }, mouseEventsHandlers));\n}\nexport { GridColumnGroupHeader };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}